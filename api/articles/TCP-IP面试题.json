{"title":"TCP/IP面试题","uid":"c975c593c9f6a4e28b749c03dfbcdd4c","slug":"TCP-IP面试题","date":"2022-08-10T03:00:16.000Z","updated":"2022-08-10T13:58:59.493Z","comments":true,"path":"api/articles/TCP-IP面试题.json","keywords":null,"cover":[],"content":"<h2 id=\"TCP-x2F-IP面试题\"><a href=\"#TCP-x2F-IP面试题\" class=\"headerlink\" title=\"TCP&#x2F;IP面试题\"></a>TCP&#x2F;IP面试题</h2><h4 id=\"1-什么是网络分层-OSI和TCP-x2F-IP模型分别是如何分层的\"><a href=\"#1-什么是网络分层-OSI和TCP-x2F-IP模型分别是如何分层的\" class=\"headerlink\" title=\"1. 什么是网络分层?OSI和TCP&#x2F;IP模型分别是如何分层的?\"></a>1. 什么是网络分层?OSI和TCP&#x2F;IP模型分别是如何分层的?</h4><p>网络为什么要分层？因为，是个复杂的程序都要分层。</p>\n<img src=\"TCP-IP%E9%9D%A2%E8%AF%95%E9%A2%98/src=http%253A%252F%252Fwww.pianshen.com%252Fimages%252F44%252F59add44f6248965818a317c82b695f8c.png&refer=http%253A%252F%252Fwww.pianshen-16601212288533.jpeg\" alt=\"img\" style=\"zoom: 50%;\" />\n\n<p>OSI网络模型包括7层:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">物理层-&gt;数据链路层-&gt;网络层-&gt;传输层-&gt;会话层-&gt;表示层-&gt;应用层</code></pre>\n\n<p>TCP&#x2F;IP模型将实际应用中较为紧密的几层合并在了一起,</p>\n<ul>\n<li>将 <code>物理层和数据链路层合并为网络接口层</code></li>\n<li>将 <code>会话层表示层应用层合并为应用层</code></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">网络接口层-&gt; 网络层(IP&#x2F;ICMP&#x2F;IGMP&#x2F;ARP&#x2F;RARP)-&gt;传输层(TCP&#x2F;UDP)-&gt;应用层</code></pre>\n\n\n\n<h4 id=\"2-UCP协议报文结构\"><a href=\"#2-UCP协议报文结构\" class=\"headerlink\" title=\"2. UCP协议报文结构\"></a>2. UCP协议报文结构</h4><p>UDP是一个无连接的传输协议，该协议称为用户数据报协议（UDP，User Datagram Protocol）。UDP为应用程序提供了一种无需建立连接就可以发送封装的 IP 数据包的方法。提供面向事务的简单不可靠信息传送服务。</p>\n<img src=\"TCP-IP%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20220810150027.png\" alt=\"微信截图_20220810150027\" style=\"zoom:67%;\" />\n\n<p>UDP协议的特点:</p>\n<ul>\n<li>UDP提供了<strong>无连接通信</strong>，且不对传送数据包进行可靠性保证，适合于一次传输少量数据，<code>UDP传输的可靠性由应用层负责。</code></li>\n<li>UDP是<strong>面向报文</strong>的。发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付给IP层。既不拆分，也不合并。</li>\n<li>常用的UDP端口号有：<strong>53（DNS）</strong>、69（TFTP）、161（SNMP）</li>\n<li>使用UDP协议包括：TFTP、SNMP、NFS、DNS、BOOTP。</li>\n</ul>\n<h4 id=\"3-TCP协议报文\"><a href=\"#3-TCP协议报文\" class=\"headerlink\" title=\"3. TCP协议报文\"></a>3. TCP协议报文</h4><p>TCP是一种面向连接的、可靠的、基于字节流的传输层通信协议，该协议称为<code>传输控制协议（TCP，Transmission Control Protocol）</code></p>\n<img src=\"TCP-IP%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20220810170619.png\" alt=\"微信截图_20220810170619\" style=\"zoom: 80%;\" />\n\n<p>TCP协议的主要特点:</p>\n<ul>\n<li>面向连接；</li>\n<li>可靠通信方式；</li>\n<li>基于流的方式；</li>\n<li>在网络状况不佳的时候尽量降低系统由于重传带来的带宽开销；</li>\n<li>通信连接维护是面向通信的两个端点的，而不考虑中间网段和节点。</li>\n</ul>\n<p>为了满足可靠,高效的传输,TCP协议提供以下的策略:</p>\n<ul>\n<li><code>数据分片</code>：在发送端对用户数据进行分片，在接收端进行重组，由TCP确定分片的大小并控制分片和重组；</li>\n<li><code>到达确认</code>：接收端接收到分片数据时，根据分片数据序号向发送端发送一个确认；</li>\n<li><code>超时重发</code>：发送方在发送分片时启动超时定时器，如果在定时器超时之后没有收到相应的确认，重发分片；</li>\n<li><code>滑动窗口</code>：TCP连接每一方的接收缓冲空间大小都固定，接收端只允许另一端发送接收端缓冲区所能接纳的数据，<strong>TCP在滑动窗口的基础上提供流量控制</strong>，防止较快主机致使较慢主机的缓冲区溢出；</li>\n<li><code>失序处理</code>：作为IP数据报来传输的TCP分片到达时可能会失序，TCP将对收到的数据进行重新排序，将收到的数据以正确的顺序交给应用层；</li>\n<li><code>重复处理</code>：作为IP数据报来传输的TCP分片会发生重复，TCP的接收端必须丢弃重复的数据；</li>\n<li><code>数据校验</code>：TCP将保持它首部和数据的检验和，这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。如果收到分片的检验和有差错，TCP将丢弃这个分片，并不确认收到此报文段导致对端超时并重发。</li>\n</ul>\n<h4 id=\"4-IP协议报文\"><a href=\"#4-IP协议报文\" class=\"headerlink\" title=\"4. IP协议报文\"></a>4. IP协议报文</h4><p>IP协议，Internet Protocol ，互联网协议，IP协议<strong>位于网络层</strong>，主要目的是使得网络间能互联通信</p>\n<p>IP是TCP&#x2F;IP协议族中的核心协议，所有TCP、UDP、ICMP和IGMP数据都是通过IP数据报传输。</p>\n<img src=\"/post/TCP-IP%E9%9D%A2%E8%AF%95%E9%A2%98/1610045-20200215111054329-2097982803.png\" class=\"\" title=\"img\">\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">- 版本号：指IP协议所使用的版本。4个位。版本号为0100，4，即IPv4，版本号为6，即IPv6\n- IP首部长度：表示IP包头长度，该字段用4位表示。最常见的报头长度是0101即20位，当IP报头长度不是4字节整数倍时，就需要对填充域填充\n- 区分服务:现在一般用于支持QoS中差分服务模型，实现网络流量优化\n- 总长度：指IPv4数据报的总长度。数据报的最大长度为：2*16-1&#x3D;65535字节，当IP数据报超过最大传输单元MTU后，会被分片处理\n- 标识符：网络中转发的IP报文的长度可以不同，但如果报文长度超过了数据链路所支持的最大长度，则报文就需要分割成若干个小的片段才能在链路上传输。将报文分割成多个片段的过程叫做分片主机将数据报分片后，在发送前，会给每一个分片数据报一个ID值，放在16位的标识符字段中。\n- 标志位：标志字段在IP报头中占3位，\n\t- 第1位作为保留，置0;\n\t- 第2位，分段，有两个不同的取值：该位置0，表示可以分段;该位置1，表示不能分段;\n\t- 第3位，更多分段，同样有两个取值：该位置0，表示这是数据流中的最后一个分段，该位置1，表示数据流未完，后续还有\n- 偏移量：各个IP分片数据报在发送到目的主机时可能是无序的，所以就需要“偏移量”字段来指明“该分片在原数据报中的位置顺序”</code></pre>\n\n\n\n\n\n\n\n<h4 id=\"5-HTTP1-0-x2F-1-1协议报\"><a href=\"#5-HTTP1-0-x2F-1-1协议报\" class=\"headerlink\" title=\"5. HTTP1.0&#x2F;1.1协议报\"></a>5. HTTP1.0&#x2F;1.1协议报</h4>","feature":true,"text":"TCP&#x2F;IP面试题1. 什么是网络分层?OSI和TCP&#x2F;IP模型分别是如何分层的?网络为什么要分层？因为，是个复杂的程序都要分层。 OSI网络模型包括7层: 物理层-&gt;数据链路层-&gt;网络层-&gt;传输层-&gt;会话层-&gt;表示层-&gt;应...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":12,"path":"api/categories/互联网八股.json"},{"name":"面试题","slug":"互联网八股/面试题","count":2,"path":"api/categories/互联网八股/面试题.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":1,"path":"api/tags/计算机网络.json"},{"name":"TCP/IP","slug":"TCP-IP","count":1,"path":"api/tags/TCP-IP.json"},{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TCP-x2F-IP%E9%9D%A2%E8%AF%95%E9%A2%98\"><span class=\"toc-text\">TCP&#x2F;IP面试题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E4%BB%80%E4%B9%88%E6%98%AF%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82-OSI%E5%92%8CTCP-x2F-IP%E6%A8%A1%E5%9E%8B%E5%88%86%E5%88%AB%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%86%E5%B1%82%E7%9A%84\"><span class=\"toc-text\">1. 什么是网络分层?OSI和TCP&#x2F;IP模型分别是如何分层的?</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-UCP%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2. UCP协议报文结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-TCP%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87\"><span class=\"toc-text\">3. TCP协议报文</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-IP%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87\"><span class=\"toc-text\">4. IP协议报文</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-HTTP1-0-x2F-1-1%E5%8D%8F%E8%AE%AE%E6%8A%A5\"><span class=\"toc-text\">5. HTTP1.0&#x2F;1.1协议报</span></a></li></ol></li></ol></li></ol>","author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}},"mapped":true,"prev_post":{"title":"Mysql 面试题","uid":"4d0cd99506fa5ed9a6631a984ab7b868","slug":"Mysql 面试题","date":"2022-08-10T03:19:19.000Z","updated":"2022-08-10T08:00:49.327Z","comments":true,"path":"api/articles/Mysql 面试题.json","keywords":null,"cover":[],"text":"Mysql 面试题1. B树和B+树的区别?相同点: 都是多路平衡查找树 一个节点中都有多个元素,且有序 不同点: B+树所有关键码都存放在叶节点中;B树关键字集合分布在整颗树中； B+树叶节点包含了全部关键码及指向相应数据记录存放地址的指针，且叶节点本身按关键码从小到大顺序连接...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":12,"path":"api/categories/互联网八股.json"},{"name":"面试题","slug":"互联网八股/面试题","count":2,"path":"api/categories/互联网八股/面试题.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":3,"path":"api/tags/Mysql.json"},{"name":"面试题","slug":"面试题","count":1,"path":"api/tags/面试题.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}},"feature":true},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2022-08-09T11:23:04.463Z","updated":"2022-08-10T02:38:24.899Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}},"feature":true}}
{"title":"Git基础","uid":"7972c32d39f314ccb6f804289f8a291c","slug":"Git基础","date":"2022-04-07T13:36:21.000Z","updated":"2022-04-07T13:43:22.527Z","comments":true,"path":"api/articles/Git基础.json","keywords":null,"cover":[],"content":"<blockquote><p>分布式版本控制系统</p></blockquote>\n<h2 id=\"简单理论\"><a href=\"#简单理论\" class=\"headerlink\" title=\"简单理论\"></a>简单理论</h2><p>四个工作区域：</p>\n<ul>\n<li>工作目录</li>\n<li>暂存区（Index\\Stage）</li>\n<li>仓库区（Repository）</li>\n<li>远程仓库（Remote）</li>\n</ul>\n<img src=\"/post/Git%E5%9F%BA%E7%A1%80/image-20210407140840726.png\" class=\"\">\n\n\n\n<h2 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h2><p><code>$ git config -l</code> 查看基础配置</p>\n<blockquote><p>本地存放位置 Git\\etc\\gitconfig中</p></blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git config -l\ndiff.astextplain.textconv&#x3D;astextplain\nfilter.lfs.clean&#x3D;git-lfs clean -- %f\nfilter.lfs.smudge&#x3D;git-lfs smudge -- %f\nfilter.lfs.process&#x3D;git-lfs filter-process\nfilter.lfs.required&#x3D;true\nhttp.sslbackend&#x3D;openssl\nhttp.sslcainfo&#x3D;D:&#x2F;Software&#x2F;Git&#x2F;mingw64&#x2F;ssl&#x2F;certs&#x2F;ca-bundle.crt\ncore.autocrlf&#x3D;true\ncore.fscache&#x3D;true\ncore.symlinks&#x3D;false\npull.rebase&#x3D;false\ncredential.helper&#x3D;manager-core\ncredential.https:&#x2F;&#x2F;dev.azure.com.usehttppath&#x3D;true\ninit.defaultbranch&#x3D;master\ncore.repositoryformatversion&#x3D;0\ncore.filemode&#x3D;false\ncore.bare&#x3D;false\ncore.logallrefupdates&#x3D;true\ncore.symlinks&#x3D;false\ncore.ignorecase&#x3D;true</code></pre>\n\n\n\n<p><code>$ git config --global --list</code> 查看本地配置文件</p>\n<blockquote><p>本地存放位置 C:\\Users\\Admin\\gitconfig中</p></blockquote>\n<blockquote><p>第一次进入会显示如下，需要配置用户名和email</p></blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git config --global --list\nfatal: unable to read config file &#39;C:&#x2F;Users&#x2F;Admin&#x2F;.gitconfig&#39;: No such file or directory</code></pre>\n\n<blockquote><p>配置用户名和邮箱</p></blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git config --global user.name &quot;SlowHot&quot;\n$ git config --global user.email  &quot;244167780@qq.com&quot;</code></pre>\n\n\n\n<p><code>ssh-keygen</code>绑定SSH公匙</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ ssh-keygen -t rsa \nGenerating public&#x2F;private rsa key pair.\nEnter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;Admin&#x2F;.ssh&#x2F;id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in &#x2F;c&#x2F;Users&#x2F;Admin&#x2F;.ssh&#x2F;id_rsa\nYour public key has been saved in &#x2F;c&#x2F;Users&#x2F;Admin&#x2F;.ssh&#x2F;id_rsa.pub\nThe key fingerprint is:\nSHA256:vLaGaZt7hUVVXHSNKgqLw5j3DwqPSScs0+JcuUkz7lo Admin@DESKTOP-UKF002H\nThe key&#39;s randomart image is:\n+---[RSA 3072]----+\n|           ..o.+&#x3D;|\n|          .   o o|\n|         .   .   |\n|      ..  o .    |\n|   + . oS+ .     |\n| oo * . o..      |\n|+ *E.o.oo.       |\n|o&#x3D;&#x3D;B&#x3D;.&#x3D;+o.       |\n| +&#x3D;&#x3D;o.+*o        |\n+----[SHA256]-----+</code></pre>\n\n<blockquote><p>C:\\Users\\Admin.ssh\\id_rsa.pub中生成SHA256公匙。将公匙复制到GitHub的setting中，来绑定本地电脑。</p></blockquote>\n<img src=\"/post/Git%E5%9F%BA%E7%A1%80/image-20210407143543816.png\" class=\"\" title=\"image-20210407143543816\">\n\n\n\n<h2 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h2><blockquote><p>初始有两种选择选择1.创建一个本地仓库 或 2.直接克隆</p></blockquote>\n<ol>\n<li><p>本地仓库搭建</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git init</code></pre>\n</li>\n<li><p>直接克隆clone</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git clone [url]</code></pre>\n</li>\n<li><p>查看工作文件夹中的文件状态(有新增文件Untracked files)</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"> $ git status [filename]\n On branch master\nYour branch is up to date with &#39;origin&#x2F;master&#39;.\n\nUntracked files:\n  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)\n        &quot;Git\\345\\255\\246\\344\\271\\240.md&quot;\n\nnothing added to commit but untracked files present (use &quot;git add&quot; to track)\n</code></pre>\n</li>\n<li><p>添加文件</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git add .</code></pre>\n</li>\n<li><p>再次查看文件状态（Changes to be committed）</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git status\nOn branch master\nYour branch is up to date with &#39;origin&#x2F;master&#39;.\n\nChanges to be committed:\n  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)\n        new file:   &quot;Git\\345\\255\\246\\344\\271\\240.md&quot;\n</code></pre>\n</li>\n<li><p>提交到本地仓库</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git commit -m &quot;commit message&quot;\n[master 7665630] commit message\n 1 file changed, 119 insertions(+)\n create mode 100644 &quot;Git\\345\\255\\246\\344\\271\\240.md&quot;\n</code></pre>\n</li>\n<li><p>查看文件状态(nothing to commit)</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git status\nOn branch master\nYour branch is ahead of &#39;origin&#x2F;master&#39; by 1 commit.\n  (use &quot;git push&quot; to publish your local commits)\n\nnothing to commit, working tree clean\n</code></pre>\n</li>\n<li><p>Push到远程仓库</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git push\nEnumerating objects: 4, done.\nCounting objects: 100% (4&#x2F;4), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (3&#x2F;3), done.\nWriting objects: 100% (3&#x2F;3), 1.67 KiB | 1.67 MiB&#x2F;s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:NPU-FanZhang&#x2F;JavaNote.git\n   9a7a3c8..7665630  master -&gt; master\n</code></pre>\n</li>\n<li><p>Pull从远程仓库更新（Pull）</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git pull\nAlready up to date.</code></pre>\n</li>\n<li><p>下次打开项目前，进行远程仓库更新（Pull）</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ git pull\nAlready up to date.</code></pre></li>\n</ol>\n<h2 id=\"Branch-分支管理\"><a href=\"#Branch-分支管理\" class=\"headerlink\" title=\"Branch 分支管理\"></a>Branch 分支管理</h2><p>新建分支</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git branch [newbranch] [master] # 新建一个基于master分支 newbranch\ngit checkout [newbranch]\n\n# 然后将新建的分支提交到 远程git服务器\n# push 方法1\ngit push -u origin\n#新建分支第一次push，会提示：\n  fatal: The current branch newbr has no upstream branch.\n  To push the current branch and set the remote as upstream, use\n    git push --set-upstream origin newbranch\n#输入这行命令，然后输入用户名和密码，就push成功了。\ngit push --set-upstream origin [newbranch]\n　　以后的push就只需要输入git push origin\n　　\n# push 方法2\n# 新建了一个叫[newbranch]的分支，而github网站上还没有，可以直接：\ngit push -u origin [newbranch]\n　　这样一个新分支就创建好了。\n\n# push 方法3\n# 提交到github的分支有多个，提交时可以用这样的格式：\ngit push -u origin local:remote\n　　比如：git push -u origin dev:master\n　　表明将本地的dev分支（冒号前）push到github的master分支（冒号后）。\n　　如果左边不写为空，将会删除远程的右边分支。</code></pre>\n\n<p>切换分支</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git checkout [branch]</code></pre>\n\n<p>删除分支</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git branch -d [branch]\t#删除本地名为branch的分支\ngit push origin --delete [branch]\t#删除远程仓库中名为branch的分支</code></pre>\n\n<p>合并分支</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">#例如将branch合并到master\ngit checkout [master]\t#切换到主分支\ngit merge --no-ff [branch]\t#然后把develop分支merge过来\n#参数意义：\n　　不用参数的默认情况下，是执行快进式合并。\n　　使用参数--no-ff，会执行正常合并，在master分支上生成一个新节点。\n　　merge的时候如果遇到冲突，就手动解决，然后重新add，commit即可。</code></pre>\n\n<p>查看分支</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">git remote show origin # 查看远程分支和本地分支的对应关系\ngit branch # 查看 本地分支\ngit branch -r\t# 查看 远程分支\ngit branch -a\t# 查看 本地远程分支\n</code></pre>\n\n\n\n\n\n","text":"分布式版本控制系统 简单理论四个工作区域： 工作目录 暂存区（Index\\Stage） 仓库区（Repository） 远程仓库（Remote） 基本配置$ git config -l 查看基础配置 本地存放位置 Git\\etc\\gitconfig中 $ git config -...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":12,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E7%90%86%E8%AE%BA\"><span class=\"toc-text\">简单理论</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">基本配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">工作流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Branch-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Branch 分支管理</span></a></li></ol>","author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}},"mapped":true,"prev_post":{"title":"Java IO/集合类","uid":"21192bc96d4d1e6c92e0c329a20feea9","slug":"Java-IO-集合类","date":"2022-04-08T02:22:24.000Z","updated":"2022-04-08T02:26:43.455Z","comments":true,"path":"api/articles/Java-IO-集合类.json","keywords":null,"cover":[],"text":"集合类容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对(两个对象)的映射表。 Collectiona. SetSet:注重独一无二的性质,该体系集合可以知道某物是否已近存在于集合中,不会存储重复的元素 用于存储...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":12,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"IO","slug":"IO","count":1,"path":"api/tags/IO.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},"next_post":{"title":"Java Visual Machine","uid":"fc14e6deadca9621a12ce14639191e3e","slug":"Java-Visual-Machine","date":"2022-04-07T12:46:48.000Z","updated":"2022-04-08T02:20:00.290Z","comments":true,"path":"api/articles/Java-Visual-Machine.json","keywords":null,"cover":[],"text":"JVM(Java Visual Machine)JVM java二进制字节码运行的环境 JVM 是java程序可移植性的基石。 好处: 一次编译，到处执行 自动内存管理 常见错误检查（数组越界检查） JVM组成部分 JVM内存结构 字节码结构 Java类加载机制 GC垃圾回收 1...","link":"","photos":[],"count_time":{"symbolsCount":"40k","symbolsTime":"37 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":12,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"JVM","slug":"JVM","count":2,"path":"api/tags/JVM.json"},{"name":"Java虚拟机","slug":"Java虚拟机","count":1,"path":"api/tags/Java虚拟机.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}}}
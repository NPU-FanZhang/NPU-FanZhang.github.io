{"title":"Git基础","uid":"7972c32d39f314ccb6f804289f8a291c","slug":"Git基础","date":"2022-04-07T13:36:21.000Z","updated":"2022-04-07T13:43:22.527Z","comments":true,"path":"api/articles/Git基础.json","keywords":null,"cover":[],"content":"<blockquote><p>分布式版本控制系统</p></blockquote>\n<h2 id=\"简单理论\"><a href=\"#简单理论\" class=\"headerlink\" title=\"简单理论\"></a>简单理论</h2><p>四个工作区域：</p>\n<ul>\n<li>工作目录</li>\n<li>暂存区（Index\\Stage）</li>\n<li>仓库区（Repository）</li>\n<li>远程仓库（Remote）</li>\n</ul>\n<img src=\"/post/Git%E5%9F%BA%E7%A1%80/image-20210407140840726.png\" class=\"\">\n\n\n\n<h2 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h2><p><code>$ git config -l</code> 查看基础配置</p>\n<blockquote><p>本地存放位置 Git\\etc\\gitconfig中</p></blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git config -l</span></span><br><span class=\"line\">diff.astextplain.textconv=astextplain</span><br><span class=\"line\">filter.lfs.clean=git-lfs clean -- %f</span><br><span class=\"line\">filter.lfs.smudge=git-lfs smudge -- %f</span><br><span class=\"line\">filter.lfs.process=git-lfs filter-process</span><br><span class=\"line\">filter.lfs.required=true</span><br><span class=\"line\">http.sslbackend=openssl</span><br><span class=\"line\">http.sslcainfo=D:/Software/Git/mingw64/ssl/certs/ca-bundle.crt</span><br><span class=\"line\">core.autocrlf=true</span><br><span class=\"line\">core.fscache=true</span><br><span class=\"line\">core.symlinks=false</span><br><span class=\"line\">pull.rebase=false</span><br><span class=\"line\">credential.helper=manager-core</span><br><span class=\"line\">credential.https://dev.azure.com.usehttppath=true</span><br><span class=\"line\">init.defaultbranch=master</span><br><span class=\"line\">core.repositoryformatversion=0</span><br><span class=\"line\">core.filemode=false</span><br><span class=\"line\">core.bare=false</span><br><span class=\"line\">core.logallrefupdates=true</span><br><span class=\"line\">core.symlinks=false</span><br><span class=\"line\">core.ignorecase=true</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>$ git config --global --list</code> 查看本地配置文件</p>\n<blockquote><p>本地存放位置 C:\\Users\\Admin\\gitconfig中</p></blockquote>\n<blockquote><p>第一次进入会显示如下，需要配置用户名和email</p></blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git config --global --list</span></span><br><span class=\"line\">fatal: unable to read config file &#x27;C:/Users/Admin/.gitconfig&#x27;: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<blockquote><p>配置用户名和邮箱</p></blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git config --global user.name <span class=\"string\">&quot;SlowHot&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git config --global user.email  <span class=\"string\">&quot;244167780@qq.com&quot;</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>ssh-keygen</code>绑定SSH公匙</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ssh-keygen -t rsa</span> </span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/c/Users/Admin/.ssh/id_rsa):</span><br><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">Your identification has been saved in /c/Users/Admin/.ssh/id_rsa</span><br><span class=\"line\">Your public key has been saved in /c/Users/Admin/.ssh/id_rsa.pub</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:vLaGaZt7hUVVXHSNKgqLw5j3DwqPSScs0+JcuUkz7lo Admin@DESKTOP-UKF002H</span><br><span class=\"line\">The key&#x27;s randomart image is:</span><br><span class=\"line\">+---[RSA 3072]----+</span><br><span class=\"line\">|           ..o.+=|</span><br><span class=\"line\">|          .   o o|</span><br><span class=\"line\">|         .   .   |</span><br><span class=\"line\">|      ..  o .    |</span><br><span class=\"line\">|   + . oS+ .     |</span><br><span class=\"line\">| oo * . o..      |</span><br><span class=\"line\">|+ *E.o.oo.       |</span><br><span class=\"line\">|o==B=.=+o.       |</span><br><span class=\"line\">| +==o.+*o        |</span><br><span class=\"line\">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>\n\n<blockquote><p>C:\\Users\\Admin.ssh\\id_rsa.pub中生成SHA256公匙。将公匙复制到GitHub的setting中，来绑定本地电脑。</p></blockquote>\n<img src=\"/post/Git%E5%9F%BA%E7%A1%80/image-20210407143543816.png\" class=\"\" title=\"image-20210407143543816\">\n\n\n\n<h2 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h2><blockquote><p>初始有两种选择选择1.创建一个本地仓库 或 2.直接克隆</p></blockquote>\n<ol>\n<li><p>本地仓库搭建</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git init</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>直接克隆clone</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git <span class=\"built_in\">clone</span> [url]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看工作文件夹中的文件状态(有新增文件Untracked files)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"> $ </span><span class=\"language-bash\">git status [filename]</span></span><br><span class=\"line\"> On branch master</span><br><span class=\"line\">Your branch is up to date with &#x27;origin/master&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class=\"line\">        &quot;Git\\345\\255\\246\\344\\271\\240.md&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git add .</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再次查看文件状态（Changes to be committed）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git status</span></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up to date with &#x27;origin/master&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">        new file:   &quot;Git\\345\\255\\246\\344\\271\\240.md&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>提交到本地仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git commit -m <span class=\"string\">&quot;commit message&quot;</span></span></span><br><span class=\"line\">[master 7665630] commit message</span><br><span class=\"line\"> 1 file changed, 119 insertions(+)</span><br><span class=\"line\"> create mode 100644 &quot;Git\\345\\255\\246\\344\\271\\240.md&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看文件状态(nothing to commit)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git status</span></span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of &#x27;origin/master&#x27; by 1 commit.</span><br><span class=\"line\">  (use &quot;git push&quot; to publish your local commits)</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Push到远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git push</span></span><br><span class=\"line\">Enumerating objects: 4, done.</span><br><span class=\"line\">Counting objects: 100% (4/4), done.</span><br><span class=\"line\">Delta compression using up to 8 threads</span><br><span class=\"line\">Compressing objects: 100% (3/3), done.</span><br><span class=\"line\">Writing objects: 100% (3/3), 1.67 KiB | 1.67 MiB/s, done.</span><br><span class=\"line\">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">To github.com:NPU-FanZhang/JavaNote.git</span><br><span class=\"line\">   9a7a3c8..7665630  master -&gt; master</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Pull从远程仓库更新（Pull）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git pull</span></span><br><span class=\"line\">Already up to date.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下次打开项目前，进行远程仓库更新（Pull）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">git pull</span></span><br><span class=\"line\">Already up to date.</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Branch-分支管理\"><a href=\"#Branch-分支管理\" class=\"headerlink\" title=\"Branch 分支管理\"></a>Branch 分支管理</h2><p>新建分支</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [newbranch] [master] <span class=\"comment\"># 新建一个基于master分支 newbranch</span></span><br><span class=\"line\">git checkout [newbranch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 然后将新建的分支提交到 远程git服务器</span></span><br><span class=\"line\"><span class=\"comment\"># push 方法1</span></span><br><span class=\"line\">git push -u origin</span><br><span class=\"line\"><span class=\"comment\">#新建分支第一次push，会提示：</span></span><br><span class=\"line\">  fatal: The current branch newbr has no upstream branch.</span><br><span class=\"line\">  To push the current branch and <span class=\"built_in\">set</span> the remote as upstream, use</span><br><span class=\"line\">    git push --set-upstream origin newbranch</span><br><span class=\"line\"><span class=\"comment\">#输入这行命令，然后输入用户名和密码，就push成功了。</span></span><br><span class=\"line\">git push --set-upstream origin [newbranch]</span><br><span class=\"line\">　　以后的push就只需要输入git push origin</span><br><span class=\"line\">　　</span><br><span class=\"line\"><span class=\"comment\"># push 方法2</span></span><br><span class=\"line\"><span class=\"comment\"># 新建了一个叫[newbranch]的分支，而github网站上还没有，可以直接：</span></span><br><span class=\"line\">git push -u origin [newbranch]</span><br><span class=\"line\">　　这样一个新分支就创建好了。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># push 方法3</span></span><br><span class=\"line\"><span class=\"comment\"># 提交到github的分支有多个，提交时可以用这样的格式：</span></span><br><span class=\"line\">git push -u origin <span class=\"built_in\">local</span>:remote</span><br><span class=\"line\">　　比如：git push -u origin dev:master</span><br><span class=\"line\">　　表明将本地的dev分支（冒号前）push到github的master分支（冒号后）。</span><br><span class=\"line\">　　如果左边不写为空，将会删除远程的右边分支。</span><br></pre></td></tr></table></figure>\n\n<p>切换分支</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [branch]</span><br></pre></td></tr></table></figure>\n\n<p>删除分支</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d [branch]\t<span class=\"comment\">#删除本地名为branch的分支</span></span><br><span class=\"line\">git push origin --delete [branch]\t<span class=\"comment\">#删除远程仓库中名为branch的分支</span></span><br></pre></td></tr></table></figure>\n\n<p>合并分支</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#例如将branch合并到master</span></span><br><span class=\"line\">git checkout [master]\t<span class=\"comment\">#切换到主分支</span></span><br><span class=\"line\">git merge --no-ff [branch]\t<span class=\"comment\">#然后把develop分支merge过来</span></span><br><span class=\"line\"><span class=\"comment\">#参数意义：</span></span><br><span class=\"line\">　　不用参数的默认情况下，是执行快进式合并。</span><br><span class=\"line\">　　使用参数--no-ff，会执行正常合并，在master分支上生成一个新节点。</span><br><span class=\"line\">　　merge的时候如果遇到冲突，就手动解决，然后重新add，commit即可。</span><br></pre></td></tr></table></figure>\n\n<p>查看分支</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote show origin <span class=\"comment\"># 查看远程分支和本地分支的对应关系</span></span><br><span class=\"line\">git branch <span class=\"comment\"># 查看 本地分支</span></span><br><span class=\"line\">git branch -r\t<span class=\"comment\"># 查看 远程分支</span></span><br><span class=\"line\">git branch -a\t<span class=\"comment\"># 查看 本地远程分支</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","text":"分布式版本控制系统 简单理论四个工作区域： 工作目录 暂存区（Index\\Stage） 仓库区（Repository） 远程仓库（Remote） 基本配置$ git config -l 查看基础配置 本地存放位置 Git\\etc\\gitconfig中 12345678910111...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":7,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Git","slug":"Git","count":1,"path":"api/tags/Git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E7%90%86%E8%AE%BA\"><span class=\"toc-text\">简单理论</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">基本配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">工作流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Branch-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Branch 分支管理</span></a></li></ol>","author":{"name":"张 凡","slug":"张-凡","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/NPU-FanZhang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"}}}},"mapped":true,"prev_post":{"title":"Java IO/集合类","uid":"21192bc96d4d1e6c92e0c329a20feea9","slug":"Java-IO-集合类","date":"2022-04-08T02:22:24.000Z","updated":"2022-04-08T02:26:43.455Z","comments":true,"path":"api/articles/Java-IO-集合类.json","keywords":null,"cover":[],"text":"集合类容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对(两个对象)的映射表。 Collectiona. SetSet:注重独一无二的性质,该体系集合可以知道某物是否已近存在于集合中,不会存储重复的元素 用于存储...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":7,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"IO","slug":"IO","count":1,"path":"api/tags/IO.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/NPU-FanZhang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"}}}}},"next_post":{"title":"Java Visual Machine","uid":"fc14e6deadca9621a12ce14639191e3e","slug":"Java-Visual-Machine","date":"2022-04-07T12:46:48.000Z","updated":"2022-04-08T02:20:00.290Z","comments":true,"path":"api/articles/Java-Visual-Machine.json","keywords":null,"cover":[],"text":"JVM(Java Visual Machine)JVM java二进制字节码运行的环境 JVM 是java程序可移植性的基石。 好处: 一次编译，到处执行 自动内存管理 常见错误检查（数组越界检查） JVM组成部分 JVM内存结构 字节码结构 Java类加载机制 GC垃圾回收 1...","link":"","photos":[],"count_time":{"symbolsCount":"39k","symbolsTime":"35 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":7,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"},{"name":"JVM","slug":"JVM","count":1,"path":"api/tags/JVM.json"},{"name":"Java虚拟机","slug":"Java虚拟机","count":1,"path":"api/tags/Java虚拟机.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/NPU-FanZhang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"}}}}}}
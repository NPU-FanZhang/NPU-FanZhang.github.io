{"name":"java","slug":"java","count":1,"postlist":[{"title":"Java面试题","uid":"e551e8b61cca027580338cf7a83d4c1a","slug":"Java面试题","date":"2022-08-30T08:08:03.000Z","updated":"2022-09-06T08:34:00.830Z","comments":true,"path":"api/articles/Java面试题.json","keywords":null,"cover":"/svg/java.svg","text":"JAVA面试题 1. finalize()方法有什么特点?finalize()方法的作用类似于C++中的析构函数,为对象创造最后一次逃脱死亡的机会。一旦垃圾收集器准备好释放对象占用的存储空间，首先调用finalize()，而且只有在下一次垃圾收集过程中，才会真正回收对象的内存。如...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":14,"path":"api/categories/互联网八股.json"},{"name":"面试题","slug":"互联网八股/面试题","count":3,"path":"api/categories/互联网八股/面试题.json"}],"tags":[{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}}]}Java-IO-集合类","date":"2022-04-08T02:22:24.000Z","updated":"2022-09-05T02:40:07.010Z","comments":true,"path":"api/articles/Java-IO-集合类.json","keywords":null,"cover":"svg/IO.svg","text":"集合类容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对(两个对象)的映射表。 Collectiona. SetSet:注重独一无二的性质,该体系集合可以知道某物是否已近存在于集合中,不会存储重复的元素 用于存储...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":14,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"IO","slug":"IO","count":1,"path":"api/tags/IO.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},{"title":"Java Visual Machine","uid":"fc14e6deadca9621a12ce14639191e3e","slug":"Java-Visual-Machine","date":"2022-04-07T12:46:48.000Z","updated":"2022-08-31T11:57:11.216Z","comments":true,"path":"api/articles/Java-Visual-Machine.json","keywords":null,"cover":"/svg/java.svg","text":"JVM(Java Visual Machine)JVM java二进制字节码运行的环境 JVM 是java程序可移植性的基石。 好处: 一次编译，到处执行 自动内存管理 常见错误检查（数组越界检查） JVM组成部分 JVM内存结构 字节码结构 Java类加载机制 GC垃圾回收 1...","link":"","photos":[],"count_time":{"symbolsCount":"40k","symbolsTime":"37 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":14,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"JVM","slug":"JVM","count":2,"path":"api/tags/JVM.json"},{"name":"Java虚拟机","slug":"Java虚拟机","count":1,"path":"api/tags/Java虚拟机.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},{"title":"Java高频八股文","uid":"73914c70a525ea7d633ba7d52ba12831","slug":"Java高频八股文","date":"2022-05-05T13:42:50.000Z","updated":"2022-08-31T11:56:55.321Z","comments":true,"path":"api/articles/Java高频八股文.json","keywords":null,"cover":"/svg/java.svg","text":"一、Java基础1. 二分查找比较基础,注意边界问题和mid的计算 mid = (l + r) &gt;&gt;&gt; 1; public class MyBinarySearch &#123; &#x2F;* * 搜索次数 log2(M) + 1 向上取整 即就是搜索树的树深...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":14,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"JVM","slug":"JVM","count":2,"path":"api/tags/JVM.json"},{"name":"集合类","slug":"集合类","count":1,"path":"api/tags/集合类.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},{"title":"LeetCode-剑指Offer篇","uid":"aad8a83fde81c29db907afa89d192a10","slug":"LeetCode-剑指Offer篇","date":"2022-04-08T08:41:11.000Z","updated":"2022-08-31T11:40:49.497Z","comments":true,"path":"api/articles/LeetCode-剑指Offer篇.json","keywords":null,"cover":"/svg/leetcode2.svg","text":"剑指 Offer剑指 Offer II 4. 只出现一次的数字 给你一个整数数组 nums ，除某个元素仅出现 一次 外，其余每个元素都恰出现 三次 。请你找出并返回那个只出现了一次的元素。 输入：nums &#x3D; [0,1,0,1,0,1,100] 输出：100 解题思路...","link":"","photos":[],"count_time":{"symbolsCount":"88k","symbolsTime":"1:20"},"categories":[{"name":"算法","slug":"算法","count":1,"path":"api/categories/算法.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"刷题","slug":"刷题","count":1,"path":"api/tags/刷题.json"},{"name":"数据结构","slug":"数据结构","count":1,"path":"api/tags/数据结构.json"},{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},{"title":"NIO","uid":"c9f2b21b690f4db6367244e90c766293","slug":"NIO","date":"2022-04-18T05:11:37.000Z","updated":"2022-09-05T02:38:34.636Z","comments":true,"path":"api/articles/NIO.json","keywords":null,"cover":"svg/IO.svg","text":"1. NIO基础NIO - Non-blocking IO 或 New IO a. NIO的三大核心-Channel、Buffer、Selector1. Channel 与 BufferJava NIO系统的核心在于：通道(Channel)和缓冲区(Buffer)。 通道表示打开...","link":"","photos":[],"count_time":{"symbolsCount":"39k","symbolsTime":"36 mins."},"categories":[{"name":"互联网八股","slug":"互联网八股","count":14,"path":"api/categories/互联网八股.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"NIO","slug":"NIO","count":1,"path":"api/tags/NIO.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},{"title":"疑难杂症","uid":"739ea830e013671a7c881bb81994b122","slug":"疑难杂症","date":"2022-05-13T07:48:56.000Z","updated":"2022-09-05T02:25:22.534Z","comments":true,"path":"api/articles/疑难杂症.json","keywords":null,"cover":"svg/question1.svg","text":"a. 编译器相关问题1. Pycharm 使用 Matplotlib 绘制动图，在PyCharm中显示绘制的动图问题.[解决办法]：在设置中将在PyCharm内部显示取消掉。 b. Windows 有关设置1. 修改Windows11默认的文件夹图标这个UP主提供了解决方案,ht...","link":"","photos":[],"count_time":{"symbolsCount":340,"symbolsTime":"1 mins."},"categories":[{"name":"疑难杂症","slug":"疑难杂症","count":1,"path":"api/categories/疑难杂症.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"Mysql","slug":"Mysql","count":3,"path":"api/tags/Mysql.json"},{"name":"编译器","slug":"编译器","count":1,"path":"api/tags/编译器.json"},{"name":"IDEA","slug":"IDEA","count":1,"path":"api/tags/IDEA.json"},{"name":"PyCharm","slug":"PyCharm","count":1,"path":"api/tags/PyCharm.json"},{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"},{"name":"Windows","slug":"Windows","count":1,"path":"api/tags/Windows.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}},{"title":"聊天项目教程","uid":"9bc6b9b8ef2259594a736fcc57388eb4","slug":"聊天项目教程","date":"2022-04-11T13:23:45.000Z","updated":"2022-09-01T11:26:20.911Z","comments":true,"path":"api/articles/聊天项目教程.json","keywords":null,"cover":[],"text":"博文主要介绍后端的核心内容 视频教训参考 黑马程序员Netty全套教程 博客参考了 Nyima 0. 总体思路前后端信息交互的推送技术有三类: 短轮询 一般是客户端定时发送普通Http请求给服务端 会占用大量服务器资源 数据响应不及时 长轮询(Comet) 基于Ajax长轮询技术...","link":"","photos":[],"count_time":{"symbolsCount":"57k","symbolsTime":"52 mins."},"categories":[{"name":"项目","slug":"项目","count":1,"path":"api/categories/项目.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"},{"name":"Netty","slug":"Netty","count":2,"path":"api/tags/Netty.json"},{"name":"Spring Boot","slug":"Spring-Boot","count":1,"path":"api/tags/Spring-Boot.json"},{"name":"Maven","slug":"Maven","count":1,"path":"api/tags/Maven.json"}],"author":{"name":"张 凡","slug":"张-凡","avatar":"/svg/coke.png","link":"/","description":"少年与爱永不老去 <br/>即使披荆斩棘,丢失怒马鲜衣。","socials":{"github":"https://github.com/Zhang-F4N","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/36174882"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode-cn.com/u/zhong-an-zu-zhi-hu-z/"}}}}}]}